ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox'

module OS
    def OS.windows?
        (/cygwin|mswin|mingw|bccwin|wince|emx/ =~ RUBY_PLATFORM) != nil
    end

    def OS.mac?
        (/darwin/ =~ RUBY_PLATFORM) != nil
    end

    def OS.unix?
        !OS.windows?
    end

    def OS.linux?
        OS.unix? and not OS.mac?
    end
end


Vagrant.configure(2) do |config|

    config.vm.define :no_game, primary: true do |web|
        web.vm.box = "ubuntu/trusty64"
        web.vm.network :private_network, ip: "10.0.0.200"
        web.ssh.forward_agent = true

        web.vm.provider :virtualbox do |v|
          v.gui = false
          v.name = "no_game"
          v.memory = 2048
        end

        if OS.mac?
          puts "Vagrant launched from OSX"

          web.vm.synced_folder "../nodejs", "/var/www/nogame/nodejs", id: "nogame_nodejs", type: "nfs"
          web.vm.synced_folder "../php/web", "/var/www/nogame/php/web", id: "nogame_php_web", type: "nfs"
          web.vm.synced_folder "../ansible", "/vagrant/ansible", id: "nogame_ansible", type: "nfs"
          web.vm.synced_folder "../ssl", "/var/www/nogame/ssl", id: "ssl", type: "nfs"
        elsif OS.linux?
          puts "Vagrant launched from Linux"

          web.vm.synced_folder "../nodejs", "/var/www/nogame/nodejs", id: "nogame_nodejs", mount_options: ["rw", "tcp", "nolock", "noacl", "async"], type: "nfs"
          web.vm.synced_folder "../php/web", "/var/www/nogame/php/web", id: "nogame_php_web", mount_options: ["rw", "tcp", "nolock", "noacl", "async"], type: "nfs"
          web.vm.synced_folder "../ansible", "/vagrant/ansible", id: "nogame_ansible", mount_options: ["rw", "tcp", "nolock", "noacl", "async"], type: "nfs"
          web.vm.synced_folder "../ssl", "/var/www/nogame/ssl", id: "ssl", mount_options: ["rw", "tcp", "nolock", "noacl", "async"], type: "nfs"
        elsif OS.windows?
          puts "Vagrant launched from Window"

          web.vm.synced_folder "../nodejs", "/var/www/nogame/nodejs", id: "nogame_nodejs", type: "smb", mount_options: ["mfsymlinks,dir_mode=0775,file_mode=0775"]
          web.vm.synced_folder "../php/web", "/var/www/nogame/php/web", id: "nogame_php_web", type: "smb", mount_options: ["mfsymlinks,dir_mode=0775,file_mode=0775"]
          web.vm.synced_folder "../ansible", "/vagrant/ansible", id: "nogame_ansible", type: "smb", mount_options: ["mfsymlinks,dir_mode=0775,file_mode=0775"]
          web.vm.synced_folder "../ssl", "/var/www/nogame/ssl", id: "ssl", mount_options: ["rw", "tcp", "nolock", "noacl", "async"], type: "nfs"
        end

        $script = <<-SCRIPT
          curl https://bootstrap.pypa.io/get-pip.py | python
          python -m easy_install --upgrade pyOpenSSL
          mkdir -p /home/vagrant/.ssh
          ssh-keyscan -H github.com > /home/vagrant/.ssh/known_hosts 2>/dev/null
          chown -R vagrant.vagrant /home/vagrant/.ssh
        SCRIPT
        web.vm.provision "shell", inline: $script

        # COMMENT FOLLOWING LINE FOR WEB-INFRASTRUCTURE DEVELOPMENT
        web.vm.provision "ansible_local" do |ansible|
          ansible.galaxy_role_file = "ansible/requirements.yml"
          ansible.galaxy_roles_path = "ansible/roles/provision"
          ansible.playbook = "ansible/playbook.yml"
          ansible.version = "2.5.4"
          ansible.install_mode = "pip"
        end

        $script = <<-SCRIPT
          cp /etc/ssl/ca.crt /var/www/nogame/ssl/
          chmod 0644 /etc/ssl/nogame.local.*
        SCRIPT

        web.vm.provision "shell", inline: $script
    end

end
